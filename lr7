#include <iostream>
#include <cstdlib>
#include <ctime>
#include <algorithm>
#include <windows.h>

using namespace std;

double computeAverage(int* row, int cols) {
    int sum = 0;
    for (int i = 0; i < cols; i++) {
        sum += row[i];
    }
    return static_cast<double>(sum) / cols;
}

void shellSort(double* arr, int size) {
    for (int gap = size / 2; gap > 0; gap /= 2) {
        for (int i = gap; i < size; i++) {
            double temp = arr[i];
            int j;
            for (j = i; j >= gap && arr[j - gap] > temp; j -= gap) {
                arr[j] = arr[j - gap];
            }
            arr[j] = temp;
        }
    }
}

void heapSort(double* arr, int size) {
    make_heap(arr, arr + size);
    sort_heap(arr, arr + size);
}

int main() {
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);
    const int rows = 9;
    const int cols = 4;

    srand(static_cast<unsigned int>(time(nullptr)));

    int matrix[rows][cols];
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            matrix[i][j] = rand() % 100;
        }
    }

    cout << "Початкова матриця:" << endl;
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            cout << matrix[i][j] << " ";
        }
        cout << endl;
    }

    double averages[rows];
    for (int i = 0; i < rows; i++) {
        averages[i] = computeAverage(matrix[i], cols);
    }

    shellSort(averages, rows);

    cout << "Середнє арифметичне рядків (за зростанням) за допомогою сортування Шелла:" << endl;
    for (int i = 0; i < rows; i++) {
        cout << averages[i] << " ";
    }
    cout << endl;

    heapSort(averages, rows);

    cout << "Середнє арифметичне рядків (за зростанням) за допомогою пірамідального сортування:" << endl;
    for (int i = 0; i < rows; i++) {
        cout << averages[i] << " ";
    }
    cout << endl;

    return 0;
}
